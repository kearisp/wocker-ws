### ws completion - begin. generated by omelette.js ###

if type compdef &>/dev/null; then
    _ws_completion() {
        compadd -- \`ws --compzsh --compgen "${CURRENT}" "${words[CURRENT - 1]}" ${BUFFER}\`
    }

    compdef _ws_completion ws
elif type complete &>/dev/null; then
    _ws_completion() {
        local cur prev nb_colon
        _get_comp_words_by_ref -n : cur prev
        nb_colon=$(grep -o ":" <<< "$COMP_LINE" | wc -l)

        local OPTIONS=$(ws --compbash --compgen "$((COMP_CWORD - (nb_colon * 2)))" "$prev" "${COMP_LINE}")

        COMPREPLY=$(compgen -W "${OPTIONS}" -- "$cur")

        mapfile -t COMPREPLY <<< "$COMPREPLY"

        for (( i=0; i<${#COMPREPLY[@]}; i++ )); do
            if [[ "${COMPREPLY[$i]}" == *' '* ]]; then
                COMPREPLY[$i]=\"${COMPREPLY[$i]}\"
            else
                COMPREPLY[$i]=${COMPREPLY[$i]//\\/\\\\}
            fi
        done

        __ltrim_colon_completions "$cur"
    }

    complete -F _ws_completion ws
elif type compctl &>/dev/null; then
    _ws_completion () {
        local cword line point si
        read -Ac words
        read -cn cword
        read -l line
        si="$IFS"
        if ! IFS=$'
' reply=($(ws --compzsh --compgen "${cword}" "${words[cword - 1]}" ${line})); then
            local ret=$?
            IFS="$si"
            return $ret
        fi
        IFS="$si"
    }

    compctl -K _ws_completion ws
fi
### ws completion - end ###